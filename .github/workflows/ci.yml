---

name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Debian Packages
        run: |
          sudo apt update
          sudo apt install -y flex libjson-glib-dev libxkbcommon-dev \
            libegl1-mesa-dev libxml2-dev libxslt1-dev libyaml-dev llvm-dev \
            libclang-dev libglib2.0-dev libepoxy-dev libwayland-dev ninja-build
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Python Package Cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.github/workflows/ci.yml') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install Python Packages
        run: |
          python -m pip install --upgrade pip setuptools wheel
          HOTDOC_BUILD_C_EXTENSION=enabled pip install hotdoc meson==0.55
      - name: Fetch libwpe
        run: |
          if [[ -d ~/libwpe/.git ]] ; then
            echo 'Updating libwpe clone...'
            cd ~/libwpe/
            git reset --hard
            git clean -qxdff
            git checkout -f master
            git pull -q
          else
            echo 'Cloning libwpe afresh...'
            rm -rf ~/libwpe/
            git clone -q https://github.com/WebPlatformForEmbedded/libwpe ~/libwpe/
          fi
          mkdir -p subprojects
          ln -s ~/libwpe subprojects/
      - name: Configure
        run: |
          mkdir -p _work && meson _work/build --prefix /usr -Dbuild_docs=true
      - name: Build
        run: TERM=dumb ninja -C _work/build
      - name: Install
        run: |
          DESTDIR="$(pwd)/_work/files" ninja -C _work/build install
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: _work
